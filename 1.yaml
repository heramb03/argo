apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2023-01-20T09:51:35Z"
  generateName: argocd-repo-server-bc9c646dc-
  labels:
    app.kubernetes.io/name: argocd-repo-server
    pod-template-hash: bc9c646dc
  name: argocd-repo-server-bc9c646dc-7nkd5
  namespace: argocd
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: argocd-repo-server-bc9c646dc
    uid: 7a5e2785-bbf5-4f87-98be-74dcd5d6a9e5
  resourceVersion: "26372"
  uid: 9d888146-3aa9-4717-bb43-dd0a9648ed61
spec:
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - podAffinityTerm:
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: argocd-repo-server
          topologyKey: kubernetes.io/hostname
        weight: 100
      - podAffinityTerm:
          labelSelector:
            matchLabels:
              app.kubernetes.io/part-of: argocd
          topologyKey: kubernetes.io/hostname
        weight: 5
  automountServiceAccountToken: false
  containers:
  - command:
    - sh
    - -c
    - entrypoint.sh argocd-repo-server --redis argocd-redis:6379
    env:
    - name: ARGOCD_RECONCILIATION_TIMEOUT
      valueFrom:
        configMapKeyRef:
          key: timeout.reconciliation
          name: argocd-cm
          optional: true
    - name: ARGOCD_REPO_SERVER_LOGFORMAT
      valueFrom:
        configMapKeyRef:
          key: reposerver.log.format
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_REPO_SERVER_LOGLEVEL
      valueFrom:
        configMapKeyRef:
          key: reposerver.log.level
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_REPO_SERVER_PARALLELISM_LIMIT
      valueFrom:
        configMapKeyRef:
          key: reposerver.parallelism.limit
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_REPO_SERVER_DISABLE_TLS
      valueFrom:
        configMapKeyRef:
          key: reposerver.disable.tls
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_TLS_MIN_VERSION
      valueFrom:
        configMapKeyRef:
          key: reposerver.tls.minversion
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_TLS_MAX_VERSION
      valueFrom:
        configMapKeyRef:
          key: reposerver.tls.maxversion
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_TLS_CIPHERS
      valueFrom:
        configMapKeyRef:
          key: reposerver.tls.ciphers
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_REPO_CACHE_EXPIRATION
      valueFrom:
        configMapKeyRef:
          key: reposerver.repo.cache.expiration
          name: argocd-cmd-params-cm
          optional: true
    - name: REDIS_SERVER
      valueFrom:
        configMapKeyRef:
          key: redis.server
          name: argocd-cmd-params-cm
          optional: true
    - name: REDIS_COMPRESSION
      valueFrom:
        configMapKeyRef:
          key: redis.compression
          name: argocd-cmd-params-cm
          optional: true
    - name: REDISDB
      valueFrom:
        configMapKeyRef:
          key: redis.db
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_DEFAULT_CACHE_EXPIRATION
      valueFrom:
        configMapKeyRef:
          key: reposerver.default.cache.expiration
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_REPO_SERVER_OTLP_ADDRESS
      valueFrom:
        configMapKeyRef:
          key: otlp.address
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE
      valueFrom:
        configMapKeyRef:
          key: reposerver.max.combined.directory.manifests.size
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS
      valueFrom:
        configMapKeyRef:
          key: reposerver.plugin.tar.exclusions
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS
      valueFrom:
        configMapKeyRef:
          key: reposerver.allow.oob.symlinks
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE
      valueFrom:
        configMapKeyRef:
          key: reposerver.streamed.manifest.max.tar.size
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE
      valueFrom:
        configMapKeyRef:
          key: reposerver.streamed.manifest.max.extracted.size
          name: argocd-cmd-params-cm
          optional: true
    - name: HELM_CACHE_HOME
      value: /helm-working-dir
    - name: HELM_CONFIG_HOME
      value: /helm-working-dir
    - name: HELM_DATA_HOME
      value: /helm-working-dir
    image: quay.io/argoproj/argocd:v2.5.4
    imagePullPolicy: Always
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /healthz?full=true
        port: 8084
        scheme: HTTP
      initialDelaySeconds: 30
      periodSeconds: 5
      successThreshold: 1
      timeoutSeconds: 1
    name: argocd-repo-server
    ports:
    - containerPort: 8081
      protocol: TCP
    - containerPort: 8084
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /healthz
        port: 8084
        scheme: HTTP
      initialDelaySeconds: 5
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    resources: {}
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /app/config/ssh
      name: ssh-known-hosts
    - mountPath: /app/config/tls
      name: tls-certs
    - mountPath: /app/config/gpg/source
      name: gpg-keys
    - mountPath: /app/config/gpg/keys
      name: gpg-keyring
    - mountPath: /app/config/reposerver/tls
      name: argocd-repo-server-tls
    - mountPath: /tmp
      name: tmp
    - mountPath: /helm-working-dir
      name: helm-working-dir
    - mountPath: /home/argocd/cmp-server/plugins
      name: plugins
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  initContainers:
  - command:
    - cp
    - -n
    - /usr/local/bin/argocd
    - /var/run/argocd/argocd-cmp-server
    image: quay.io/argoproj/argocd:v2.5.4
    imagePullPolicy: IfNotPresent
    name: copyutil
    resources: {}
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/argocd
      name: var-files
  nodeName: minikube
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: argocd-repo-server
  serviceAccountName: argocd-repo-server
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - configMap:
      defaultMode: 420
      name: argocd-ssh-known-hosts-cm
    name: ssh-known-hosts
  - configMap:
      defaultMode: 420
      name: argocd-tls-certs-cm
    name: tls-certs
  - configMap:
      defaultMode: 420
      name: argocd-gpg-keys-cm
    name: gpg-keys
  - emptyDir: {}
    name: gpg-keyring
  - emptyDir: {}
    name: tmp
  - emptyDir: {}
    name: helm-working-dir
  - name: argocd-repo-server-tls
    secret:
      defaultMode: 420
      items:
      - key: tls.crt
        path: tls.crt
      - key: tls.key
        path: tls.key
      - key: ca.crt
        path: ca.crt
      optional: true
      secretName: argocd-repo-server-tls
  - emptyDir: {}
    name: var-files
  - emptyDir: {}
    name: plugins
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2023-01-20T09:52:16Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2023-01-24T07:00:42Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2023-01-24T07:00:42Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2023-01-20T09:51:35Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: docker://6f148f7bc069861f6268107935986a3c49e77e38386359ab96199c3645aa8661
    image: quay.io/argoproj/argocd:v2.5.4
    imageID: docker-pullable://quay.io/argoproj/argocd@sha256:d5c4f7542580f275ea92fd07da8569cfe9fb6e49b75bbefef01255ccc4b77d57
    lastState:
      terminated:
        containerID: docker://3b9fa58605c5bd1ac0feb1d1d9c39b5cff368c97846285e7d24cda462f330e87
        exitCode: 255
        finishedAt: "2023-01-24T07:00:09Z"
        reason: Error
        startedAt: "2023-01-23T07:10:50Z"
    name: argocd-repo-server
    ready: true
    restartCount: 2
    started: true
    state:
      running:
        startedAt: "2023-01-24T07:00:36Z"
  hostIP: 192.168.49.2
  initContainerStatuses:
  - containerID: docker://4f23d1810c7abf04cc40edc9b96d9c626fd3913afa508f354da795ebd5c849ac
    image: quay.io/argoproj/argocd:v2.5.4
    imageID: docker-pullable://quay.io/argoproj/argocd@sha256:d5c4f7542580f275ea92fd07da8569cfe9fb6e49b75bbefef01255ccc4b77d57
    lastState: {}
    name: copyutil
    ready: true
    restartCount: 2
    state:
      terminated:
        containerID: docker://4f23d1810c7abf04cc40edc9b96d9c626fd3913afa508f354da795ebd5c849ac
        exitCode: 0
        finishedAt: "2023-01-24T07:00:30Z"
        reason: Completed
        startedAt: "2023-01-24T07:00:30Z"
  phase: Running
  podIP: 172.17.0.2
  podIPs:
  - ip: 172.17.0.2
  qosClass: BestEffort
  startTime: "2023-01-20T09:51:35Z"
